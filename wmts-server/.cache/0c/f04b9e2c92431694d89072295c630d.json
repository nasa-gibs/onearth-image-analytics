{"id":"../../../node_modules/ol/proj/projections.js","dependencies":[{"name":"/Users/jaaustin/node_modules/ol/proj/projections.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/jaaustin/Documents/ml-server/wmts-server/package.json","includedInParent":true,"mtime":1560987598999},{"name":"/Users/jaaustin/node_modules/ol/package.json","includedInParent":true,"mtime":1559664113128}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.get = get;\nexports.add = add;\n\n/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\n\nfunction clear() {\n  cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\n\n\nfunction get(code) {\n  return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\n\n\nfunction add(code, projection) {\n  cache[code] = projection;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":"let","original":{"line":9,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":9,"column":4},"generated":{"line":17,"column":4}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":9,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":9,"column":12},"generated":{"line":17,"column":12}},{"source":"../../../src/ol/proj/projections.js","name":"let","original":{"line":9,"column":0},"generated":{"line":17,"column":14}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":15,"column":7},"generated":{"line":22,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":15,"column":16},"generated":{"line":22,"column":9}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":15,"column":7},"generated":{"line":22,"column":14}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":15,"column":24},"generated":{"line":22,"column":17}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":16,"column":2},"generated":{"line":23,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":16,"column":2},"generated":{"line":23,"column":2}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":16,"column":7},"generated":{"line":23,"column":7}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":16,"column":10},"generated":{"line":23,"column":10}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":16,"column":2},"generated":{"line":23,"column":12}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":17,"column":1},"generated":{"line":24,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":25,"column":7},"generated":{"line":32,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":25,"column":16},"generated":{"line":32,"column":9}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":25,"column":7},"generated":{"line":32,"column":12}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":25,"column":20},"generated":{"line":32,"column":13}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":25,"column":7},"generated":{"line":32,"column":17}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":25,"column":26},"generated":{"line":32,"column":19}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":2},"generated":{"line":33,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":9},"generated":{"line":33,"column":9}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":14},"generated":{"line":33,"column":14}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":15},"generated":{"line":33,"column":15}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":14},"generated":{"line":33,"column":19}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":9},"generated":{"line":33,"column":20}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":24},"generated":{"line":33,"column":24}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":26,"column":2},"generated":{"line":33,"column":28}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":27,"column":1},"generated":{"line":34,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":7},"generated":{"line":42,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":16},"generated":{"line":42,"column":9}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":7},"generated":{"line":42,"column":12}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":20},"generated":{"line":42,"column":13}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":7},"generated":{"line":42,"column":17}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":26},"generated":{"line":42,"column":19}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":7},"generated":{"line":42,"column":29}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":35,"column":38},"generated":{"line":42,"column":31}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":2},"generated":{"line":43,"column":0}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":2},"generated":{"line":43,"column":2}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":7},"generated":{"line":43,"column":7}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":8},"generated":{"line":43,"column":8}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":7},"generated":{"line":43,"column":12}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":2},"generated":{"line":43,"column":13}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":16},"generated":{"line":43,"column":16}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":36,"column":2},"generated":{"line":43,"column":26}},{"source":"../../../src/ol/proj/projections.js","name":null,"original":{"line":37,"column":1},"generated":{"line":44,"column":0}}],"sources":{"../../../src/ol/proj/projections.js":"/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n"},"lineCount":null}},"error":null,"hash":"f8f4b6b82a42bfc68329c9e2a53c6362","cacheData":{"env":{}}}